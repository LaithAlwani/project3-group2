{"version":3,"sources":["components/routing/PrivateRoute.js","components/pages/Login.js","components/pages/Register.js","components/pages/ForgotPassword.js","components/pages/ResetPassword.js","components/pages/Landing.js","components/pages/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","localStorage","getItem","to","Login","history","_useState","useState","_useState2","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","useEffect","push","loginHandler","_ref2","asyncToGenerator","regenerator_default","mark","_callee","e","config","_yield$axios$post","data","wrap","_context","prev","next","preventDefault","header","Content-Type","axios","post","sent","setItem","token","t0","response","setTimeout","stop","_x","apply","this","arguments","className","onSubmit","htmlFor","type","required","id","placeholder","onChange","target","value","tabIndex","react_router_dom","autoComplete","Register","username","setUsername","_useState7","_useState8","confirmpassword","setConfirmPassword","_useState9","_useState10","role","setRole","_useState11","_useState12","registerHandler","abrupt","ForgotPassword","success","setSuccess","forgotPasswordHandler","ResetPassword","match","confirmPassword","resetPasswordHandler","_yield$axios$put","put","concat","params","resetToken","console","log","Landing","privateData","setPrivateData","_yield$axios$get","headers","Authorization","get","removeItem","fetchPrivateDate","ClassName","onClick","Home","App","routing_PrivateRoute","exact","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.83f34f59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"authToken\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Login.css\";\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n  \r\n    useEffect(() => {\r\n      if (localStorage.getItem(\"authToken\")) {\r\n        history.push(\"/login\");\r\n      }\r\n    }, [history]);\r\n  \r\n    const loginHandler = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const config = {\r\n        header: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      try {\r\n        const { data } = await axios.post(\r\n          \"/api/auth/login\",\r\n          { email, password },\r\n          config\r\n        );\r\n  \r\n        localStorage.setItem(\"authToken\", data.token);\r\n  \r\n        history.push(\"/portal\");\r\n      } catch (error) {\r\n        setError(error.response.data.error);\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"login-screen\">\r\n        <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n          <h3 className=\"login-screen__title\">Login</h3>\r\n          {error && <span className=\"error-message\">{error}</span>}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              required\r\n              id=\"email\"\r\n              placeholder=\"Email address\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              tabIndex={1}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">\r\n              Password:{\" \"}\r\n              <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\r\n                Forgot Password?\r\n              </Link>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              autoComplete=\"true\"\r\n              placeholder=\"Enter password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              tabIndex={2}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n  \r\n          <span className=\"login-screen__subtext\">\r\n            Don't have an account? <Link to=\"/register\">Register</Link>\r\n          </span>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Login;\r\n  ","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Register.css\";\r\n\r\n\r\n\r\nconst Register = ({ history }) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    \r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n    const config = {\r\n        header: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n        setPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n        setTimeout(() => {\r\n            setError(\"\");\r\n        }, 5000);\r\n        return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        {\r\n            username,\r\n            email,\r\n            password,\r\n            role,\r\n            \r\n        },\r\n        config\r\n    );\r\n\r\n    localStorage.setItem(\"authToken\", data.token);\r\n\r\n    history.push(\"/portal\");\r\n    } catch (error) {\r\n        setError(error.response.data.error);\r\n        setTimeout(() => {\r\n        setError(\"\");\r\n        }, 5000);\r\n    }\r\n    };\r\n\r\n  return (\r\n        <div className=\"register-screen\">\r\n            <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n                <h3 className=\"register-screen__title\">Sign Up</h3>\r\n                    {error && <span className=\"error-message\">{error}</span>}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            required\r\n                            id=\"name\"\r\n                            placeholder=\"Enter Full Name\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                    </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            required\r\n                            id=\"email\"\r\n                            placeholder=\"Email address\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            required\r\n                            id=\"password\"\r\n                            autoComplete=\"true\"\r\n                            placeholder=\"Enter password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            required\r\n                            id=\"confirmpassword\"\r\n                            autoComplete=\"true\"\r\n                            placeholder=\"Confirm password\"\r\n                            value={confirmpassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"role\"> Role:</label>\r\n                    <select value={role} onChange={(e) => setRole(e.target.value)} >\r\n                        <option value=\"\"></option>\r\n                        <option value=\"Instructor\">Instructor</option>\r\n                        <option value=\"Student\">Student</option>\r\n                    </select>\r\n                </div>                    \r\n                <button type=\"submit\" className=\"btn btn-primary\"> Sign Up</button>\r\n                <span className=\"register-screen__subtext\">\r\n                    Already have an account? <Link to=\"/login\">Login</Link>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/ForgotPassword.css\"\r\n\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const forgotPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n        header: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    try {\r\n        const { data } = await axios.post(\r\n            \"/api/auth/forgotpassword\",\r\n            { email },\r\n        config\r\n        );\r\n\r\n        setSuccess(data.data);\r\n    } catch (error) {\r\n        setError(error.response.data.error);\r\n        setEmail(\"\");\r\n        setTimeout(() => {\r\n            setError(\"\");\r\n        }, 5000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgotpassword-screen\">\r\n          <form\r\n            onSubmit={forgotPasswordHandler}\r\n            className=\"forgotpassword-screen__form\"\r\n          >\r\n            <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\r\n            {error && <span className=\"error-message\">{error}</span>}\r\n            {success && <span className=\"success-message\">{success}</span>}\r\n            <div className=\"form-group\">\r\n              <p className=\"forgotpassword-screen__subtext\">\r\n                Please enter the email address you register your account with. We\r\n                will send you reset password confirmation to this email\r\n              </p>\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                required\r\n                id=\"email\"\r\n                placeholder=\"Email address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Send Email\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    };\r\n\r\n\r\nexport default ForgotPassword;","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/ResetPassword.css\";\r\n\r\nconst ResetPassword = ({match }) => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const resetPasswordHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n    const config = {\r\n        header: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n        setPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n        setTimeout(() => {\r\n        setError(\"\");\r\n        }, 5000);\r\n    return setError(\"Passwords don't match\");\r\n    }\r\n\r\n    try {\r\n        const { data } = await axios.put(\r\n        `/api/auth/passwordreset/${match.params.resetToken}`,\r\n        {\r\n          password,\r\n        },\r\n        config\r\n        );\r\n\r\n    console.log(data);\r\n    setSuccess(data.data);\r\n\r\n    } catch (error) {\r\n        setError(error.response.data.error);\r\n        setTimeout(() => {\r\n            setError(\"\");\r\n        }, 5000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"resetpassword-screen\">\r\n            <form onSubmit={resetPasswordHandler} className=\"resetpassword-screen__form\">\r\n                <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n                    {error && <span className=\"error-message\">{error} </span>}\r\n                    {success && (\r\n                    <span className=\"success-message\">\r\n                        {success} <Link to=\"/login\">Login</Link>\r\n                    </span>)}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">New Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            required\r\n                            id=\"password\"\r\n                            placeholder=\"Enter new password\"\r\n                            autoComplete=\"true\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            required\r\n                            id=\"confirmpassword\"\r\n                            placeholder=\"Confirm new password\"\r\n                            autoComplete=\"true\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;","import React from  \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Landing = ({history}) => {\r\n    const [error, setError] = useState(\"\");\r\n    const [privateData, setPrivateData] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"authToken\")) {\r\n            history.push(\"/login\")\r\n        }\r\n        const fetchPrivateDate = async () => {\r\n        const config = {\r\n        headers: {\r\n             \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n            },\r\n    };\r\n\r\n    try {\r\n        const { data } = await axios.get(\"/api/private\", config);\r\n        setPrivateData(data.data);\r\n    } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        setError(\"You are not authorized please login\");\r\n        }\r\n    };\r\n\r\n    fetchPrivateDate();\r\n    }, [history]);\r\n\r\n    const logoutHandler = () =>{\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push(\"/\")\r\n    }\r\n\r\n     return error ? (\r\n         <span ClassName= \"error-message\">{error}</span>\r\n        ) : (\r\n    <div>\r\n    <div>{privateData}</div>\r\n    <button onClick={logoutHandler}>LogOut</button>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Home = () => {\r\n     return (\r\n        <div>\r\n            <h1>Project 3 Group 2</h1>\r\n            <ul>\r\n                <li><Link to=\"/register\"> Sign Up </Link></li>\r\n                <li><Link to=\"/login\"> Login</Link></li>\r\n            </ul>\r\n        </div>\r\n         \r\n\r\n         \r\n\r\n\r\n     )\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\nimport Login from \"./components/pages/Login\";\r\nimport Register from \"./components/pages/Register\";\r\nimport ForgotPassword from \"./components/pages/ForgotPassword\";\r\nimport ResetPassword from \"./components/pages/ResetPassword\";\r\nimport Landing from \"./components/pages/Landing\";\r\nimport Home from \"./components/pages/Home\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/portal\" component={Landing} />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/forgotpassword\"component={ForgotPassword}/>\r\n          <Route exact path=\"/passwordreset/:resetToken\"component={ResetPassword}/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}